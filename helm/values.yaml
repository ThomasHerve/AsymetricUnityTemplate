# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
namespace: asyncunity

image:
  repository: thomasherve/asymetric-unity-core
  pullPolicy: Always
  tag: "latest"

instance:
  repository: thomasherve/asymetric-unity-instance
  pullPolicy: Always
  tag: "latest"

frontend:
  repository: thomasherve/asymetric-unity-frontend
  pullPolicy: Always
  tag: "latest"
  port: 80

imagePullSecrets:
  name: thomashervecredentials
  dockerconfigjson: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  name: core
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/use-regex: 'true'
  hosts:
    - host: asyncunitycore.multiplayertournamentonline.fr
      path:  /()(.*)
      pathType: Prefix
      name: core
      port: 8000
    - host: asyncunityfrontend.multiplayertournamentonline.fr
      path:  /()(.*)
      pathType: Prefix
      name: frontend
      port: 80
  tls: 
    - secretName: ingress-cert
      hosts:
        - multiplayertournamentonline.fr

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  certificateauthoritydata:
  clientcertificatedata:
  clientkeydata:
  kubeaddress: 149.202.55.61

# MongoDB
mongodb:
  operator:
    # Name that will be assigned to most of internal Kubernetes objects like
    # Deployment, ServiceAccount, Role etc.
    name: mongodb-kubernetes-operator

    # Name of the operator image
    operatorImageName: mongodb-kubernetes-operator

    # Name of the deployment of the operator pod
    deploymentName: mongodb-kubernetes-operator

    # Version of mongodb-kubernetes-operator
    version: 0.9.0

    # Uncomment this line to watch all namespaces
    # watchNamespace: "*"

    # Resources allocated to Operator Pod
    resources:
      limits:
        cpu: 1100m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 200Mi

    # replicas deployed for the operator pod. Running 1 is optimal and suggested.
    replicas: 1

    # Additional environment variables
    extraEnvs: []
    # environment:
    # - name: CLUSTER_DOMAIN
    #   value: my-cluster.domain

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 2000

    securityContext: {}

  ## Operator's database
  database:
    name: mongodb-database
    # set this to the namespace where you would like
    # to deploy the MongoDB database,
    # Note if the database namespace is not same
    # as the operator namespace,
    # make sure to set "watchNamespace" to "*"
    # to ensure that the operator has the
    # permission to reconcile resources in other namespaces
    # namespace: mongodb-database

  agent:
    name: mongodb-agent
    version: 107.0.0.8465-1
  versionUpgradeHook:
    name: mongodb-kubernetes-operator-version-upgrade-post-start-hook
    version: 1.0.8
  readinessProbe:
    name: mongodb-kubernetes-readinessprobe
    version: 1.0.17
  mongodb:
    name: mongo
    repo: docker.io

  registry:
    agent: quay.io/mongodb
    versionUpgradeHook: quay.io/mongodb
    readinessProbe: quay.io/mongodb
    operator: quay.io/mongodb
    pullPolicy: Always

  # Set to false if CRDs have been installed already. The CRDs can be installed
  # manually from the code repo: github.com/mongodb/mongodb-kubernetes-operator or
  # using the `community-operator-crds` Helm chart.
  community-operator-crds:
    enabled: true

  # Deploys MongoDB with `resource` attributes.
  createResource: false
  resource:
    name: mongodb-replica-set
    version: 4.4.0
    members: 3
    tls:
      enabled: false

      # Installs Cert-Manager in this cluster.
      useX509: false
      sampleX509User: false
      useCertManager: true
      certificateKeySecretRef: tls-certificate
      caCertificateSecretRef: tls-ca-key-pair
      certManager:
        certDuration: 8760h   # 365 days
        renewCertBefore: 720h   # 30 days

    users: []
